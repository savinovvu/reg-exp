version: '3.7'
x-healthcheck:
  &health_check
  interval: 1m
  timeout: 10s
  retries: 2
  start_period: 1m
services:

  regexp-postgres:
    build:
      context: ${TOP}/infrastructure/postgres
      dockerfile: ./Dockerfile
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=regexpert
    healthcheck:
      <<: *health_check
      test: pg_isready -U postgres
    network_mode: host

  static-page-dev:
    container_name: static-page-dev
    build:
      context: ${TOP}
      dockerfile: infrastructure/scenarios/docker-composes/dev/nodejs.dockerfile
    entrypoint: ["npm", "run", "start"]
    volumes:
      - ${TOP}/front-end/static-pages:/opt/front-end
    network_mode: host

  reg-exp-dev:
    container_name: reg-exp-dev
    build:
      context: ${TOP}
      dockerfile: infrastructure/scenarios/docker-composes/dev/nodejs.dockerfile
    entrypoint: ["npm", "run", "start-with-nginx-proxy"]
    volumes:
      - ${TOP}/front-end/regexp:/opt/front-end
    network_mode: host

  nginx-proxy:
    container_name: nginx-proxy
    image: nginx:1.17.8-alpine
    volumes:
      - ${TOP}/infrastructure/scenarios/docker-composes/dev/nginx.conf.nginx:/etc/nginx/nginx.conf
    network_mode: host

