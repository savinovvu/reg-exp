version: '3.4'
x-healthcheck:
  &health_check
  interval: 1m
  timeout: 10s
  retries: 2
  start_period: 1m
services:

  regexp-postgres:
    build:
      context: ./infrastructure/postgres
      dockerfile: ./Dockerfile
    ports:
    - 55432:5432
    networks:
      - network2
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=regexpert
    healthcheck:
      <<: *health_check
      test: pg_isready -U postgres

  app:
    build:
      context: .
      dockerfile: ./infrastructure/app/project-gradle.dockerfile
    container_name: regexp
    ports:
      - 8080:8080
      - 8090:8090
    environment:
      - POSTGRES_URL=regexp-postgres:5432
    restart: unless-stopped
    depends_on:
      - regexp-postgres
      - graylog
    networks:
      - network1
      - network2
    entrypoint: sh -c "/usr/lib/jvm/spring-boot-runtime/bin/java -Dfile.encoding=UTF-8 -jar /opt/reg-exp.jar"
    healthcheck:
      <<: *health_check
      test: curl -f http://localhost:9090/monitoring/health || exit 1

  regexp-nginx:
    build:
      context: .
      dockerfile: infrastructure/nginx/nginx.dockerfile

    ports:
      - 8880:8880
    networks:
      - network1
      - network2
    depends_on:
      - app

  graylog:
    build:
      context: .
      dockerfile: infrastructure/graylog-logging/graylog.dockerfile
    container_name: graylog
    ports:
      - '9000:9000'
      - '12201:12201'
      - '12201:12201/udp'
      - '514:514'
      - '5555:5555'
    environment:
      - 'GRAYLOG_WEB_ENDPOINT_URI=http://127.0.0.1:9000/api'
    depends_on:
      - mongo
      - elasticsearch
    networks:
      - network2

  mongo:
    image: mongo:3
    container_name: mongo
    networks:
      - network2

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:5.6.11
    container_name: elasticsearch
    ports:
      - '9200:9200'
      - '9300:9300'
    environment:
      - 'ES_JAVA_OPTS=-Xms512m -Xmx512m'
      - discovery.type=single-node
      - xpack.security.enabled=false
      - bootstrap.memory_lock=true
    networks:
      - network2

networks:
  network1:
    driver: bridge
  network2:
    driver: bridge
